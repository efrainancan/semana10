package Views;

/**
 *
 * @author eancan
 */
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import models.ArriendoCuota;
import models.Cliente;
import storage.DataStorage;

public class Principal extends javax.swing.JFrame {

    private static final String VIEW_SEPARATOR = " - ";
    
    private final DataStorage storage = DataStorage.getInstance();
    private final String DEFAULT_CLIENT_OPTION = "Seleccione Cliente";
    private final String DEFAULT_CAR_OPTION = "Seleccione Automovil";
    
    private DefaultListModel<String> modeloDatos;
    
    /**
     * Creates new form Clientes
     */
    public Principal() {
        initComponents();
        renderCmbClientes();
        renderCmbAutomovil();
        setLocationRelativeTo(null);
        modeloDatos = new DefaultListModel<>();
        listArriendos.setModel(modeloDatos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jFrame1 = new javax.swing.JFrame();
        jMenu3 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        panelPrincipal = new javax.swing.JTabbedPane();
        panelMenuPrincipal = new javax.swing.JPanel();
        txtPrecioPorDia = new javax.swing.JTextField();
        lblCantidadCuotas = new javax.swing.JLabel();
        txtCantidadCuotas = new javax.swing.JTextField();
        btnGuardarArriendoYMostrarCuotas = new javax.swing.JButton();
        scrlTablaCuotasAPagar = new javax.swing.JScrollPane();
        tblCuotasAPagar = new javax.swing.JTable();
        btnPagarPrimeraCuota = new javax.swing.JButton();
        txtMontoAPagar = new javax.swing.JTextField();
        cmbClientes = new javax.swing.JComboBox<>();
        lblTituloPanel1 = new javax.swing.JLabel();
        cmbCars = new javax.swing.JComboBox<>();
        lblFechaArriendo = new javax.swing.JLabel();
        txtFechaArriendo = new javax.swing.JTextField();
        lblDias = new javax.swing.JLabel();
        lblPrecioPorDia = new javax.swing.JLabel();
        lblMontoAPagar = new javax.swing.JLabel();
        txtDias = new javax.swing.JTextField();
        cmbShowAgregarCliente = new javax.swing.JButton();
        panelMenuClientes = new javax.swing.JPanel();
        lbl_P2_Clientes = new javax.swing.JLabel();
        lbl_P2_Cedula = new javax.swing.JLabel();
        lbl_P2_Nombre = new javax.swing.JLabel();
        txtCedulaCliente = new javax.swing.JTextField();
        txtNombreCliente = new javax.swing.JTextField();
        chkClienteVigente = new javax.swing.JCheckBox();
        btnAgregarCliente = new javax.swing.JButton();
        panelMenuPagoCuotas = new javax.swing.JPanel();
        btn_P3_mostrarPagosArriendo = new javax.swing.JButton();
        lbl_P3_seleccioneArriendo = new javax.swing.JLabel();
        cmbClienteArriendo = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listArriendos = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPagos = new javax.swing.JTable();
        btn_P3_RealizarPago = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jMenu3.setText("jMenu3");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("jRadioButtonMenuItem2");

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Semana 10 APP");

        lblCantidadCuotas.setText("Cantidad de cuotas");

        btnGuardarArriendoYMostrarCuotas.setText("Guardar arriendo y mostrar cuotas >>");
        btnGuardarArriendoYMostrarCuotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarArriendoYMostrarCuotasActionPerformed(evt);
            }
        });

        tblCuotasAPagar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Valor", "Pagada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrlTablaCuotasAPagar.setViewportView(tblCuotasAPagar);

        btnPagarPrimeraCuota.setLabel("Pagar Primera Cuota");
        btnPagarPrimeraCuota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarPrimeraCuotaActionPerformed(evt);
            }
        });

        txtMontoAPagar.setEditable(false);
        txtMontoAPagar.setToolTipText("");

        cmbClientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Cliente" }));
        cmbClientes.setToolTipText("");
        cmbClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClientesActionPerformed(evt);
            }
        });

        lblTituloPanel1.setText("ARRIENDO CON CUOTAS");
        lblTituloPanel1.setMaximumSize(new java.awt.Dimension(122, 16));
        lblTituloPanel1.setMinimumSize(new java.awt.Dimension(122, 16));
        lblTituloPanel1.setPreferredSize(new java.awt.Dimension(122, 16));

        cmbCars.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Automovil" }));
        cmbCars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCarsActionPerformed(evt);
            }
        });

        lblFechaArriendo.setText("Fecha de arriendo");

        txtFechaArriendo.setToolTipText("");

        lblDias.setText("Días");

        lblPrecioPorDia.setText("Precio por día");

        lblMontoAPagar.setText("Monto a pagar");

        cmbShowAgregarCliente.setText("Agregar Cliente");
        cmbShowAgregarCliente.setToolTipText("");
        cmbShowAgregarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbShowAgregarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMenuPrincipalLayout = new javax.swing.GroupLayout(panelMenuPrincipal);
        panelMenuPrincipal.setLayout(panelMenuPrincipalLayout);
        panelMenuPrincipalLayout.setHorizontalGroup(
            panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenuPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMenuPrincipalLayout.createSequentialGroup()
                        .addGroup(panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDias)
                            .addComponent(lblFechaArriendo)
                            .addComponent(lblPrecioPorDia)
                            .addComponent(lblMontoAPagar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtDias, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFechaArriendo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrecioPorDia)
                            .addComponent(txtMontoAPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelMenuPrincipalLayout.createSequentialGroup()
                                .addComponent(lblCantidadCuotas)
                                .addGap(18, 18, 18)
                                .addComponent(txtCantidadCuotas, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnGuardarArriendoYMostrarCuotas))
                        .addGap(18, 18, 18)
                        .addGroup(panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPagarPrimeraCuota)
                            .addComponent(scrlTablaCuotasAPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelMenuPrincipalLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmbShowAgregarCliente)
                            .addComponent(cmbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addComponent(cmbCars, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(95, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMenuPrincipalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTituloPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelMenuPrincipalLayout.setVerticalGroup(
            panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenuPrincipalLayout.createSequentialGroup()
                .addComponent(lblTituloPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbCars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(cmbShowAgregarCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMenuPrincipalLayout.createSequentialGroup()
                        .addGroup(panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFechaArriendo)
                            .addComponent(txtFechaArriendo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCantidadCuotas)
                            .addComponent(txtCantidadCuotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDias)
                            .addComponent(txtDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGuardarArriendoYMostrarCuotas))
                        .addGap(34, 34, 34)
                        .addGroup(panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPrecioPorDia)
                            .addComponent(txtPrecioPorDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMontoAPagar)
                            .addComponent(txtMontoAPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(scrlTablaCuotasAPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(btnPagarPrimeraCuota)
                .addGap(49, 49, 49))
        );

        lblTituloPanel1.getAccessibleContext().setAccessibleDescription("");

        panelPrincipal.addTab("Arriendo Cuotas", panelMenuPrincipal);

        lbl_P2_Clientes.setText("CLIENTES");

        lbl_P2_Cedula.setText("Cédula:");

        lbl_P2_Nombre.setText("Nombre:");

        txtCedulaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaClienteActionPerformed(evt);
            }
        });

        chkClienteVigente.setText("Vigente?");
        chkClienteVigente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkClienteVigenteActionPerformed(evt);
            }
        });

        btnAgregarCliente.setText("Agregar Cliente");
        btnAgregarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMenuClientesLayout = new javax.swing.GroupLayout(panelMenuClientes);
        panelMenuClientes.setLayout(panelMenuClientesLayout);
        panelMenuClientesLayout.setHorizontalGroup(
            panelMenuClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenuClientesLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelMenuClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelMenuClientesLayout.createSequentialGroup()
                        .addGroup(panelMenuClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_P2_Clientes)
                            .addComponent(lbl_P2_Nombre, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_P2_Cedula, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelMenuClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCedulaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(txtNombreCliente)))
                    .addGroup(panelMenuClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(chkClienteVigente)
                        .addComponent(btnAgregarCliente)))
                .addContainerGap(553, Short.MAX_VALUE))
        );
        panelMenuClientesLayout.setVerticalGroup(
            panelMenuClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenuClientesLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lbl_P2_Clientes)
                .addGap(43, 43, 43)
                .addGroup(panelMenuClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_P2_Cedula)
                    .addComponent(txtCedulaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(panelMenuClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_P2_Nombre)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(chkClienteVigente)
                .addGap(44, 44, 44)
                .addComponent(btnAgregarCliente)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        panelPrincipal.addTab("Clientes", panelMenuClientes);

        btn_P3_mostrarPagosArriendo.setText("Mostrar pagos arriendo seleccionado >>>");
        btn_P3_mostrarPagosArriendo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_P3_mostrarPagosArriendoActionPerformed(evt);
            }
        });

        lbl_P3_seleccioneArriendo.setText("Seleccione arriendo:");

        cmbClienteArriendo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Cliente" }));
        cmbClienteArriendo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClienteArriendoActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(listArriendos);

        tblPagos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Numero", "Valor", "Pagado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblPagos);

        btn_P3_RealizarPago.setText("Realizar Pago");
        btn_P3_RealizarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_P3_RealizarPagoActionPerformed(evt);
            }
        });

        jLabel12.setText("PAGOS");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Pagar cuotas arriendo");

        javax.swing.GroupLayout panelMenuPagoCuotasLayout = new javax.swing.GroupLayout(panelMenuPagoCuotas);
        panelMenuPagoCuotas.setLayout(panelMenuPagoCuotasLayout);
        panelMenuPagoCuotasLayout.setHorizontalGroup(
            panelMenuPagoCuotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenuPagoCuotasLayout.createSequentialGroup()
                .addGroup(panelMenuPagoCuotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelMenuPagoCuotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelMenuPagoCuotasLayout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addGroup(panelMenuPagoCuotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbl_P3_seleccioneArriendo)
                                .addGroup(panelMenuPagoCuotasLayout.createSequentialGroup()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn_P3_mostrarPagosArriendo)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(panelMenuPagoCuotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btn_P3_RealizarPago)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMenuPagoCuotasLayout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(148, 148, 148))))
                        .addGroup(panelMenuPagoCuotasLayout.createSequentialGroup()
                            .addGap(125, 125, 125)
                            .addComponent(jLabel1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelMenuPagoCuotasLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmbClienteArriendo, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(209, 209, 209)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        panelMenuPagoCuotasLayout.setVerticalGroup(
            panelMenuPagoCuotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenuPagoCuotasLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelMenuPagoCuotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMenuPagoCuotasLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addComponent(cmbClienteArriendo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_P3_seleccioneArriendo)
                        .addGroup(panelMenuPagoCuotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelMenuPagoCuotasLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(btn_P3_mostrarPagosArriendo))
                            .addGroup(panelMenuPagoCuotasLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(59, 59, 59))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMenuPagoCuotasLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_P3_RealizarPago)
                        .addGap(21, 21, 21))))
        );

        panelPrincipal.addTab("Pagar cuotas", panelMenuPagoCuotas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 787, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal))
        );

        panelPrincipal.getAccessibleContext().setAccessibleName("Menú principal");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClientesActionPerformed

    }//GEN-LAST:event_cmbClientesActionPerformed

    private void cmbCarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCarsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCarsActionPerformed

    private void btnPagarPrimeraCuotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarPrimeraCuotaActionPerformed
        panelPrincipal.setSelectedIndex(2);
    }//GEN-LAST:event_btnPagarPrimeraCuotaActionPerformed

    private void txtCedulaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaClienteActionPerformed

    private void btn_P3_mostrarPagosArriendoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_P3_mostrarPagosArriendoActionPerformed
        int numArriendo = getNumArriendoActual();
        if (numArriendo == -1) {
            return;
        }
        var cuotaArriendo = storage.getArriendoCuota(numArriendo);
        var tblModel = (DefaultTableModel) tblPagos.getModel();
        tblModel.setRowCount(0);
        for (var cuota : cuotaArriendo.getCuotasArriendo()) {
            tblModel.addRow(new Object[]{
                cuota.getPagada(), cuota.getNumCuota(), cuota.getValorCuota(), cuota.getPagada()
            });
        }
        
    }//GEN-LAST:event_btn_P3_mostrarPagosArriendoActionPerformed

    private void cmbShowAgregarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbShowAgregarClienteActionPerformed
        panelPrincipal.setSelectedIndex(1);
    }//GEN-LAST:event_cmbShowAgregarClienteActionPerformed

    private void chkClienteVigenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkClienteVigenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkClienteVigenteActionPerformed

    private void btnAgregarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarClienteActionPerformed
        String cedula = txtCedulaCliente.getText().trim();
       
        if (cedula.isBlank()) {
            showError("Campo cedula no puede estar vacio");
            return;
        }
        
        String nombre = txtNombreCliente.getText().trim();
        if (nombre.isBlank()) {
            showError("Campo nombre no puede estar vacio");
            return;
        }
        
        if (storage.clienteExiste(cedula)) {
            showError("Ya existe un cliente registrado con numero de cedula ingreado");
            return;
        }
        
        try {
            Cliente cliente = new Cliente(cedula, nombre, chkClienteVigente.isSelected());
            storage.addClient(cliente);
            txtCedulaCliente.setText("");
            txtNombreCliente.setText("");
            chkClienteVigente.setSelected(false);
            renderCmbClientes();
            panelPrincipal.setSelectedIndex(0);
            showMessage( "Cliente registrado con exito");
        } catch (Exception e) {
            showError(e.getMessage());
        }
    }//GEN-LAST:event_btnAgregarClienteActionPerformed

    private void btnGuardarArriendoYMostrarCuotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarArriendoYMostrarCuotasActionPerformed
        var selectedClient = (String)cmbClientes.getSelectedItem();
        if (DEFAULT_CLIENT_OPTION.equals(selectedClient)) {
            showError("Debe seleccionar un cliente");
            return;
        }
        
        var selectedCar = (String)cmbCars.getSelectedItem();
        if (DEFAULT_CAR_OPTION.equals(selectedCar)) {
            showError("Debe seleccionar un automovil");
            return;
        }
        
        int id = storage.getArriendoCuotaNextSeq();
        String fechaArriendo = txtFechaArriendo.getText().trim();
        
        if (!isValidDate(fechaArriendo, "dd-MM-yyyy")) {
            showError("Fecha debe estar en formato dd-MM-yyyy");
            return;
        }
        
        int diasArriendo = getAsInt(txtDias);
        if (diasArriendo == -1) {
            showError("Dias arriendo debe ser numerico");
            return;
        }
        
        int cantidadCuotas = getAsInt(txtCantidadCuotas);
        if (cantidadCuotas == -1) {
            showError("Cantidad de cuotas debe ser numerico");
            return;
        }
        
        int precioPorDia = getAsInt(txtPrecioPorDia);
        if (precioPorDia == -1) {
            showError("Precio por dia debe ser numerico");
            return;
        }
        
        var cliente = storage.findClient(selectedClient.split(" ")[0]);
        var vehiculo = storage.findCar(selectedCar.split(" ")[0]);

        var arriendoCuota = new ArriendoCuota(id, fechaArriendo, diasArriendo, cliente, vehiculo, cantidadCuotas);
        
        if (!arriendoCuota.ingresarArriendoConCuota(precioPorDia)) {
            showError("La evaluacion no se ha completado correctamente.");
            return;
        }
        
        storage.addArriendoCuotaList(arriendoCuota);
        
        var cuotas = arriendoCuota.getCuotasArriendo();
        var tblModel = (DefaultTableModel) tblCuotasAPagar.getModel();
        tblModel.setRowCount(0);

        for (var cuota: cuotas) {
            var rowData = new Object[] { cuota.getNumCuota(), cuota.getValorCuota(), cuota.getPagada() };
            tblModel.addRow(rowData);
        }

        /*
        cmbClientes.setSelectedIndex(0);
        cmbCars.setSelectedIndex(0);
        txtFechaArriendo.setText("");
        txtDias.setText("");
        txtCantidadCuotas.setText("");
        txtPrecioPorDia.setText("");
        */
        renderCmbClientes();
        renderCmbClientesArriendo();
        renderCmbAutomovil();
        txtMontoAPagar.setText(String.valueOf(arriendoCuota.obtenerMontoAPagar(precioPorDia)));
        showMessage("Arriendo coutas guardado correctamente");
    }//GEN-LAST:event_btnGuardarArriendoYMostrarCuotasActionPerformed

    private void cmbClienteArriendoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClienteArriendoActionPerformed
        String selectedClient = (String) cmbClienteArriendo.getSelectedItem();
        modeloDatos.removeAllElements();
        
        var tblModel = (DefaultTableModel) tblPagos.getModel();
        tblModel.setRowCount(0);

        if (DEFAULT_CLIENT_OPTION.equals(selectedClient)) {
            return;
        }
        
        String cedula = selectedClient.split(VIEW_SEPARATOR) [0];
        var arriendos = storage.getArriendosByclient(cedula).stream()
                .map(e -> e.getNumArriendo() + VIEW_SEPARATOR + e.getVehiculo().getPatente())
                .toList();
        
        modeloDatos.addAll(arriendos);
    }//GEN-LAST:event_cmbClienteArriendoActionPerformed

    private void btn_P3_RealizarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_P3_RealizarPagoActionPerformed
        int numArriendo = getNumArriendoActual();
        if (numArriendo == -1) {
            return;
        }
        var arriendoCuota = storage.getArriendoCuota(numArriendo);
        var tblModel = (DefaultTableModel) tblPagos.getModel();
        for (int i=0; i < tblModel.getRowCount(); i++) {
            System.out.println("value: " + tblModel.getValueAt(i, 0).toString());
            boolean isPaid = Boolean.parseBoolean(tblModel.getValueAt(i, 0).toString());
            if (isPaid) {
                var cuota = Integer.parseInt(tblModel.getValueAt(i, 1).toString());
                System.out.println("Pagando cuota numero: " + cuota);
                if (!arriendoCuota.pagarCuota(cuota)) {
                    showError("no se pudo realizar el pago de la cuota numero: " + cuota);
                    return;
                }
            }
        }
        showMessage("Pago de cuotas realizado exitosamente.");
    }//GEN-LAST:event_btn_P3_RealizarPagoActionPerformed
    
    private int getAsInt(JTextField field) {
        try {
            var value = field.getText().trim();
            return Integer.parseInt(value);
        } catch(Exception e){
            System.out.println("Error: " + e.getMessage());
            return -1;
        }
    }

    private void renderCmbClientes() {
        var items = storage.getClientes().stream()
            .map(c -> c.getCedula() + VIEW_SEPARATOR + c.getNombre() +  VIEW_SEPARATOR + (c.isVigente() ?  "Vigente" : " No Vigente"))
            .toList();
        var options = new ArrayList<String>();
        options.add(DEFAULT_CLIENT_OPTION);
        options.addAll(items);
        cmbClientes.setModel(new DefaultComboBoxModel<>(options.toArray(String[]::new)));
    }
    
    private void renderCmbClientesArriendo() {
        var items = storage.getArriendoCuotaList().stream()
            .map(ArriendoCuota::getCliente)
            .map(c -> c.getCedula() + VIEW_SEPARATOR + c.getNombre())
            .distinct()
            .toList();
        var options = new ArrayList<String>();
        options.add(DEFAULT_CLIENT_OPTION);
        options.addAll(items);
        cmbClienteArriendo.setModel(new DefaultComboBoxModel<>(options.toArray(String[]::new)));
    }
    
    private void renderCmbAutomovil() {
        var items = storage.getVehiculos().stream()
                .map(v -> v.getPatente()+ VIEW_SEPARATOR + v.getCondicion())
                .toList();
        var options = new ArrayList<String>();
        options.add(DEFAULT_CAR_OPTION);
        options.addAll(items);
        cmbCars.setModel(new DefaultComboBoxModel<>(options.toArray(String[]::new)));
    }
    
    private int getNumArriendoActual() {
        String selectedClient = (String) cmbClienteArriendo.getSelectedItem();
        
        if (DEFAULT_CLIENT_OPTION.equals(selectedClient)) {
            showError("Debe seleccionar un cliente");
            return -1;
        }
        
        String arriendo = listArriendos.getSelectedValue();
        if (arriendo == null || arriendo.isBlank()) {
            showError("Debe seleccionar el arriendo a cancelar");
            return -1;
        }
        
        return Integer.parseInt(arriendo.split(VIEW_SEPARATOR)[0]);
    }

    protected void showError(String message) {
        JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    protected void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message, "Aviso", JOptionPane.INFORMATION_MESSAGE);
    }

    public boolean isValidDate(String d, String dateFormat) {
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(dateFormat);
        try {
            dtf.parse(d);
        } catch (DateTimeParseException ex) {
            return false;
        }
        return true;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarCliente;
    private javax.swing.JButton btnGuardarArriendoYMostrarCuotas;
    private javax.swing.JButton btnPagarPrimeraCuota;
    private javax.swing.JButton btn_P3_RealizarPago;
    private javax.swing.JButton btn_P3_mostrarPagosArriendo;
    private javax.swing.JCheckBox chkClienteVigente;
    private javax.swing.JComboBox<String> cmbCars;
    private javax.swing.JComboBox<String> cmbClienteArriendo;
    private javax.swing.JComboBox<String> cmbClientes;
    private javax.swing.JButton cmbShowAgregarCliente;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCantidadCuotas;
    private javax.swing.JLabel lblDias;
    private javax.swing.JLabel lblFechaArriendo;
    private javax.swing.JLabel lblMontoAPagar;
    private javax.swing.JLabel lblPrecioPorDia;
    private javax.swing.JLabel lblTituloPanel1;
    private javax.swing.JLabel lbl_P2_Cedula;
    private javax.swing.JLabel lbl_P2_Clientes;
    private javax.swing.JLabel lbl_P2_Nombre;
    private javax.swing.JLabel lbl_P3_seleccioneArriendo;
    private javax.swing.JList<String> listArriendos;
    private javax.swing.JPanel panelMenuClientes;
    private javax.swing.JPanel panelMenuPagoCuotas;
    private javax.swing.JPanel panelMenuPrincipal;
    private javax.swing.JTabbedPane panelPrincipal;
    private javax.swing.JScrollPane scrlTablaCuotasAPagar;
    private javax.swing.JTable tblCuotasAPagar;
    private javax.swing.JTable tblPagos;
    private javax.swing.JTextField txtCantidadCuotas;
    private javax.swing.JTextField txtCedulaCliente;
    private javax.swing.JTextField txtDias;
    private javax.swing.JTextField txtFechaArriendo;
    private javax.swing.JTextField txtMontoAPagar;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtPrecioPorDia;
    // End of variables declaration//GEN-END:variables
}
